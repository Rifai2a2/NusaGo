// Generated by view binder compiler. Do not edit!
package com.nusago.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.nusago.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHobbyBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout culinaryTour;

  @NonNull
  public final RelativeLayout hiking;

  @NonNull
  public final RelativeLayout hobby;

  @NonNull
  public final RelativeLayout other;

  @NonNull
  public final RelativeLayout waterActivities;

  private ActivityHobbyBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout culinaryTour, @NonNull RelativeLayout hiking,
      @NonNull RelativeLayout hobby, @NonNull RelativeLayout other,
      @NonNull RelativeLayout waterActivities) {
    this.rootView = rootView;
    this.culinaryTour = culinaryTour;
    this.hiking = hiking;
    this.hobby = hobby;
    this.other = other;
    this.waterActivities = waterActivities;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHobbyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHobbyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hobby, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHobbyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.culinaryTour;
      RelativeLayout culinaryTour = ViewBindings.findChildViewById(rootView, id);
      if (culinaryTour == null) {
        break missingId;
      }

      id = R.id.hiking;
      RelativeLayout hiking = ViewBindings.findChildViewById(rootView, id);
      if (hiking == null) {
        break missingId;
      }

      RelativeLayout hobby = (RelativeLayout) rootView;

      id = R.id.other;
      RelativeLayout other = ViewBindings.findChildViewById(rootView, id);
      if (other == null) {
        break missingId;
      }

      id = R.id.waterActivities;
      RelativeLayout waterActivities = ViewBindings.findChildViewById(rootView, id);
      if (waterActivities == null) {
        break missingId;
      }

      return new ActivityHobbyBinding((RelativeLayout) rootView, culinaryTour, hiking, hobby, other,
          waterActivities);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
